{"version":3,"sources":["components/display-text/display-text.component.jsx","components/drum-pad/drum-pad.component.jsx","components/drum-pads-wrapper/drum-pads-wrapper.component.jsx","components/button/button.component.jsx","components/display/display.component.jsx","components/box/box.component.jsx","data/data.js","App.js","serviceWorker.js","index.js"],"names":["DisplayText","textToDisplay","className","DrumPad","keyTrigger","id","url","playAudio","onClick","src","DrumPadsWrapper","handlePlaySound","togglePower","sounds","map","keyCode","key","clicked","e","handler","target","firstChild","classList","toggle","Button","title","handleBank","handlePower","color","event","style","backgroundColor","Display","Box","rel","href","bankOne","bankTwo","App","props","handleKeyPress","bankElement","state","find","sound","toUpperCase","text","document","getElementById","keyPressed","currentTime","play","setState","add","setTimeout","remove","toggleBank","newSounds","addEventListener","this","removeEventListener","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c21f944.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './display-text.styles.scss';\r\n\r\nconst DisplayText = ({ textToDisplay }) => (\r\n    <div className=\"DisplayText\">\r\n        <p className=\"text\">{ textToDisplay }</p>\r\n    </div>\r\n);\r\n\r\n\r\nexport default DisplayText;\r\n","import React from 'react';\r\nimport './drum-pad.styles.scss';\r\n\r\nconst DrumPad = ({ keyTrigger, id, url, playAudio }) => (\r\n    <div className=\"drum-pad\" id={id} onClick={playAudio} >\r\n        <audio className=\"clip\" id={keyTrigger} src={url}>Your browser does not support the <code>audio</code> element.</audio>\r\n        <p className=\"inner-text\">{ keyTrigger }</p>\r\n    </div>\r\n);\r\n\r\nexport default DrumPad;","import React from 'react';\r\nimport DrumPad from '../drum-pad/drum-pad.component';\r\n\r\nimport './drum-pads-wrapper.styles.scss';\r\n\r\nconst DrumPadsWrapper = ({ handlePlaySound, togglePower, sounds }) => {\r\n    return(\r\n        <div className=\"DrumPadsWrapper\">\r\n            {sounds.map(({ keyCode, keyTrigger, id, url }) => \r\n                <DrumPad \r\n                    playAudio={() => !togglePower ? handlePlaySound(keyTrigger, id): null} \r\n                    key={keyCode} \r\n                    id={id} \r\n                    keyTrigger={keyTrigger} \r\n                    url={url} \r\n                />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrumPadsWrapper;","import React from 'react';\r\nimport './button.styles.scss'\r\n\r\nconst clicked = (e, handler) => {\r\n    if(e.target.firstChild){\r\n        e.target.firstChild.classList.toggle('clicked')\r\n    }else{\r\n        e.target.classList.toggle('clicked')\r\n    }\r\n\r\n    return handler();\r\n}\r\n\r\nconst Button = ({ title = 'title', handleBank, handlePower, color }) => (\r\n    <div className=\"Button\" >\r\n        <div className=\"btn-area\" onClick={(event) => handleBank? clicked(event, handleBank) : clicked(event, handlePower)}>\r\n            <div className=\"btn\" style={{backgroundColor: color}}></div>\r\n        </div>\r\n        <p className=\"title-btn\">{ title }</p>\r\n    </div>\r\n);\r\n\r\nexport default Button;","import React from 'react';\r\nimport DisplayText from '../display-text/display-text.component';\r\nimport DrumPadsWrapper from '../drum-pads-wrapper/drum-pads-wrapper.component';\r\nimport Button from '../button/button.component';\r\n\r\nimport '../box/box.styles.scss';\r\nimport './display.styles.scss';\r\n\r\n\r\nconst Display= ({ textToDisplay, sounds, handlePlaySound, handleBank, handlePower, togglePower }) => {\r\n    return(\r\n        <div className=\"Display\" id=\"display\">\r\n            <div className=\"header\">\r\n                <Button title=\"power\" handlePower={handlePower} color={\"#E52307\"} />\r\n                <Button title=\"bank\" handleBank={handleBank} />\r\n            </div>\r\n            <div className=\"block\">\r\n                <h1 className=\"title\"> <span className=\"styled-title\">Drum</span> Machine </h1>\r\n                <DisplayText textToDisplay={textToDisplay} />\r\n            </div>\r\n            <div className=\"block\">\r\n                <DrumPadsWrapper handlePlaySound={handlePlaySound} sounds={sounds} togglePower={togglePower} />\r\n            </div>\r\n            <footer className=\"footer\">\r\n                <p>Fernando Vieira</p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display;","import React from 'react';\r\nimport './box.styles.scss';\r\n\r\nconst Box = ({ backgroundColor }) => (\r\n    <div className=\"Box backgroungImage\">\r\n        <div className=\"backgroundColor\" style={{backgroundColor: backgroundColor}}></div>\r\n        <p>Foto de <a className=\"author\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.pexels.com/pt-br/foto/aparelhos-bateria-cenario-close-1601464/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels\">Wendy Wei</a></p>\r\n    </div>\r\n);\r\n\r\nexport default Box;\r\n\r\n","const bankOne = [{\r\n    keyCode: 81,\r\n    keyTrigger: 'Q',\r\n    id: 'Heater-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\r\n    backgroundColor: \"#483D8B\"\r\n  }, {\r\n    keyCode: 87,\r\n    keyTrigger: 'W',\r\n    id: 'Heater-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\r\n    backgroundColor: \"#A1448E\"\r\n  }, {\r\n    keyCode: 69,\r\n    keyTrigger: 'E',\r\n    id: 'Heater-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\r\n    backgroundColor: \"#E0597E\"\r\n  }, {\r\n    keyCode: 65,\r\n    keyTrigger: 'A',\r\n    id: 'Heater-4',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\r\n    backgroundColor: \"#FF8568\"\r\n  }, {\r\n    keyCode: 83,\r\n    keyTrigger: 'S',\r\n    id: 'Clap',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\r\n    backgroundColor: \"#FFBD5B\"\r\n  }, {\r\n    keyCode: 68,\r\n    keyTrigger: 'D',\r\n    id: 'Open-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\r\n    backgroundColor: \"#F9F871\"\r\n  }, {\r\n    keyCode: 90,\r\n    keyTrigger: 'Z',\r\n    id: \"Kick-n'-Hat\",\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\r\n    backgroundColor: \"#00C49C\"\r\n  }, {\r\n    keyCode: 88,\r\n    keyTrigger: 'X',\r\n    id: 'Kick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',\r\n    backgroundColor: \"#882422\"\r\n  }, {\r\n    keyCode: 67,\r\n    keyTrigger: 'C',\r\n    id: 'Closed-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\r\n    backgroundColor: \"#AEA9BA\"\r\n  },\r\n];\r\n\r\nconst bankTwo = [\r\n  {\r\n    keyCode: 81,\r\n    keyTrigger: 'Q',\r\n    id: 'Chord-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',\r\n    backgroundColor: \"#483D8B\"\r\n  }, \r\n  {\r\n    keyCode: 87,\r\n    keyTrigger: 'W',\r\n    id: 'Chord-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3',\r\n    backgroundColor: \"#A1448E\"\r\n  }, \r\n  {\r\n    keyCode: 69,\r\n    keyTrigger: 'E',\r\n    id: 'Chord-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3',\r\n    backgroundColor: \"#E0597E\"\r\n  }, \r\n  {\r\n    keyCode: 65,\r\n    keyTrigger: 'A',\r\n    id: 'Shaker',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3',\r\n    backgroundColor: \"#FF8568\"\r\n  },\r\n  {\r\n    keyCode: 83,\r\n    keyTrigger: 'S',\r\n    id: 'Open-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3',\r\n    backgroundColor: \"#FFBD5B\"\r\n  },\r\n  {\r\n    keyCode: 68,\r\n    keyTrigger: 'D',\r\n    id: 'Closed-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3',\r\n    backgroundColor: \"#F9F871\"\r\n  },\r\n  {\r\n    keyCode: 90,\r\n    keyTrigger: 'Z',\r\n    id: 'Punchy-Kick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3',\r\n    backgroundColor: \"#00C49C\"\r\n  },\r\n  {\r\n    keyCode: 88,\r\n    keyTrigger: 'X',\r\n    id: 'Side-Stick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3',\r\n    backgroundColor: \"#882422\"\r\n  },\r\n  {\r\n    keyCode: 67,\r\n    keyTrigger: 'C',\r\n    id: 'Snare',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3',\r\n    backgroundColor: \"#AEA9BA\"\r\n  }\r\n];\r\n\r\nexport {bankOne, bankTwo};","import React from 'react';\nimport Display from './components/display/display.component';\nimport Box from './components/box/box.component';\nimport { bankOne, bankTwo } from './data/data';\n\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        textToDisplay: '',\n        backgroundColor: '',\n        sounds: [...bankOne],\n        toggleBank:false,\n        togglePower: false\n    }\n  }\n  componentDidMount() {\n      document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n      document.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = (e) => {\n      const sounds = this.state.sounds;\n      const bankElement = sounds.find(sound => sound.keyTrigger === e.key.toUpperCase());\n      if(bankElement) {\n          const text = bankElement.id;\n          return this.handlePlaySound(e.key.toUpperCase(), text);\n      }\n  }\n\n  handlePlaySound = (keyTrigger, text) => { \n      const sound = document.getElementById(keyTrigger);\n      const keyPressed = document.getElementById(text);\n\n      const bankElement = this.state.sounds.find(sound => sound.keyTrigger === keyTrigger);\n      \n      if(sound){\n          sound.currentTime = 0;\n          sound.play();\n\n          this.setState({\n              textToDisplay: text,\n              backgroundColor: bankElement.backgroundColor\n          })\n\n          keyPressed.classList.add(\"clicked\");\n          setTimeout(()=> keyPressed.classList.remove(\"clicked\"), 200);\n          \n      }\n\n\n  }\n\n  handleBank = () => {\n    const toggleBank = !this.state.toggleBank;\n    if(toggleBank){\n      this.setState({\n        sounds: [...bankTwo],\n        toggleBank: toggleBank,\n        textToDisplay: \"\",\n        backgroundColor: \"\"\n      });\n    }else{\n      this.setState({\n        sounds: [...bankOne],\n        toggleBank: toggleBank,\n        textToDisplay: \"\",\n        backgroundColor: \"\"\n      });\n    }\n  }\n\n  handlePower = () => {\n    const togglePower = !this.state.togglePower;\n    const toggleBank = this.state.toggleBank;\n    const sounds = [...this.state.sounds];\n    \n    if(togglePower){\n      const newSounds = sounds.map(sound => ({\n        backgroundColor:\"\",\n        keyTrigger:\" \",\n        url:\"\",\n        id:\"\",\n        keyCode: sound.keyCode\n      }));\n\n      this.setState({\n        sounds:[...newSounds],\n        togglePower: togglePower,\n        textToDisplay: \"\",\n        backgroundColor: \"\"\n      });\n    }else{\n      if(toggleBank){\n        this.setState({\n          sounds:[...bankTwo],\n          togglePower: togglePower,\n          textToDisplay: \"\",\n          backgroundColor: \"\"\n        });\n      }else{\n        this.setState({\n          sounds:[...bankOne],\n          togglePower: togglePower,\n          textToDisplay: \"\",\n          backgroundColor: \"\"\n        });\n      }\n    }\n  }\n\n  render(){\n    const { textToDisplay, sounds, backgroundColor, togglePower } = this.state;\n    return (\n      <div className=\"App\" id=\"drum-machine\">\n        <Display \n          textToDisplay={textToDisplay} \n          sounds={sounds} \n          handlePower={this.handlePower} \n          handlePlaySound={this.handlePlaySound} \n          handleBank={this.handleBank}\n          togglePower={togglePower}\n        />\n        <Box backgroundColor={backgroundColor} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}